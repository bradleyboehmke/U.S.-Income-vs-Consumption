colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
plot_ly(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
??plot_geo
install.packages("plotly")
install.packages("plotly")
density <- state.x77[, "Population"] / state.x77[, "Area"]
density
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
plot_geo() %>%
add_trace(
z = ~density, text = state.name,
locations = state.abb, locationmode = 'USA-states'
) %>%
add_markers(
x = state.center[["x"]], y = state.center[["y"]],
size = I(2), symbol = I(8), color = I("white"), hoverinfo = "none"
) %>%
layout(geo = g)
library(plotly)
plot_geo() %>%
add_trace(
z = ~density, text = state.name,
locations = state.abb, locationmode = 'USA-states'
) %>%
add_markers(
x = state.center[["x"]], y = state.center[["y"]],
size = I(2), symbol = I(8), color = I("white"), hoverinfo = "none"
) %>%
layout(geo = g)
state.name
df
df <- data_clean %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income) %>%
right_join(map_data("state")) %>%
select(-subregion) %>%
filter(Year == 2014)
library(rvest)        # scraping data
library(tidyr)        # creating tidy data
library(dplyr)        # transforming (joining, summarizing, etc.) data
library(tibble)       # coercing data to tibbles
library(magrittr)     # for piping capabilities
library(DT)           # for printing nice HTML output tables
library(ggplot2)      # visualizing data
library(ggrepel)
df <- data_clean %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income) %>%
right_join(map_data("state")) %>%
select(-subregion) %>%
filter(Year == 2014)
df
plot_geo(df, x = long, y = lat) %>%
add_trace(
z = ~density, text = state.name,
locations = state.abb, locationmode = 'USA-states'
) %>%
add_markers(
x = state.center[["x"]], y = state.center[["y"]],
size = I(2), symbol = I(8), color = I("white"), hoverinfo = "none"
) %>%
layout(geo = g)
plot_geo(df, x = ~long, y = ~lat) %>%
add_trace(
z = ~density, text = state.name,
locations = state.abb, locationmode = 'USA-states'
) %>%
add_markers(
x = state.center[["x"]], y = state.center[["y"]],
size = I(2), symbol = I(8), color = I("white"), hoverinfo = "none"
) %>%
layout(geo = g)
plot_geo() %>%
add_trace(
z = ~df$Savings_Rate, text = state.name,
locations = state.abb, locationmode = 'USA-states'
) %>%
add_markers(
x = state.center[["x"]], y = state.center[["y"]],
size = I(2), symbol = I(8), color = I("white"), hoverinfo = "none"
) %>%
layout(geo = g)
plot_geo() %>%
add_trace(
z = df$Savings_Rate, text = df$Location,
locations = state.abb, locationmode = 'USA-states'
) %>%
add_markers(
x = state.center[["x"]], y = state.center[["y"]],
size = I(2), symbol = I(8), color = I("white"), hoverinfo = "none"
) %>%
layout(geo = g)
plot_geo() %>%
add_trace(
z = df$Savings_Rate, text = df$Location,
locations = df$Location, locationmode = 'USA-states'
) %>%
add_markers(
x = state.center[["x"]], y = state.center[["y"]],
size = I(2), symbol = I(8), color = I("white"), hoverinfo = "none"
) %>%
layout(geo = g)
dat <- map_data("world", "canada") %>% group_by(group)
dat
density()
density
data_clean
data_clean %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income)
df <- data_clean %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income)
plot_geo() %>%
add_trace(
z = df$Savings_Rate, text = df$Location,
locations = df$Location, locationmode = 'USA-states'
) %>%
add_markers(
x = state.center[["x"]], y = state.center[["y"]],
size = I(2), symbol = I(8), color = I("white"), hoverinfo = "none"
) %>%
layout(geo = g)
plot_geo() %>%
add_trace(
z = df$Savings_Rate, text = df$Location,
locations = df$Location, locationmode = 'USA-states'
)
plot_geo() %>%
add_trace(
z = ~df$Savings_Rate, text = ~df$Location,
locations = ~df$Location, locationmode = 'USA-states'
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Location
)
df
ex <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
ex <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
ex$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
ex
head(ex)
df
data_clean %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income) %>%
right_join(map_data("state")) %>%
filter(Fips != 0, Year == 2014)
data_clean %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income) %>%
filter(Fips != 0, Year == 2014)
data_clean %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income) %>%
filter(Fips != "0", Year == 2014)
data_clean %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income) %>%
filter(Location != "United States", Year == 2014)
data_clean %>%
filter(Location != "United States", Year == 2014) %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income,
Code = state.abb)
df <- data_clean %>%
filter(Location != "United States", Year == 2014) %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income,
Code = state.abb)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)',
geo = g
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = round(~Savings_Rate, 1), text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
df <- data_clean %>%
filter(Location != "United States", Year == 2014) %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income,
Code = state.abb,
Savings_Rate_Pretty = paste0(round(Savings_Rate * 100, 1), "%"))
df
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate_Pretty, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar = list(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05) %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05) %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa', scale = 1.2),
lakecolor = toRGB('white')
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05) %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa', scale = 1.1),
lakecolor = toRGB('white')
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05) %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa', scale = .8),
lakecolor = toRGB('white')
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05) %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05) %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
?colorbar
?tickprefix
??tickprefix
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05, ticksuffix = "%") %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
df <- data_clean %>%
filter(Location != "United States", Year == 2014) %>%
mutate(region = tolower(Location),
Savings_Rate = round(Savings / Income * 100, 1),
Code = state.abb,
Savings_Rate_Pretty = paste0(round(Savings_Rate * 100, 1), "%"))
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05, ticksuffix = "%") %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
df <- data_clean %>%
filter(Location != "United States", Year == 2014) %>%
mutate(region = tolower(Location),
Savings_Rate = round(Savings / Income * 100, 1),
Code = state.abb,
Savings_Rate_Pretty = paste0(round(Savings_Rate * 100, 2), "%"))
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05, ticksuffix = "%") %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
df <- data_clean %>%
filter(Location != "United States", Year == 2014) %>%
mutate(region = tolower(Location),
Savings_Rate = round(Savings / Income * 100, 2),
Code = state.abb)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05, ticksuffix = "%") %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
df2 <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')
head(df2)
df2 %>% filter(COUNTRY == "United States")
plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Savings_Rate, text = ~Location,
locations = ~Code, colors = "Purples"
) %>%
colorbar(title = 'Savings Rate (%)', len = .4, thickness = 20, xpad = 0, ypad = 0, x = 1.05, ticksuffix = '%') %>%
layout(
title = paste(unique(df$Year), 'Saving Rates by State<br>(Hover for breakdown)'),
geo = g
)
?scale_fill_gradient2
data_clean %>%
filter(Year == 2014) %>%
mutate(region = tolower(Location),
Savings_Rate = round(Savings / Income * 100, 2),
Code = state.abb)
data_clean
state.abb
rm(list = ls())
#####################
# download PCI data #
#####################
# url for PCI HTML table
url_pci <- read_html("http://www.bea.gov/iTable/iTableHtml.cfm?reqid=70&step=30&isuri=1&7022=21&7023=0&7024=non-industry&7033=-1&7025=0&7026=00000,01000,02000,04000,05000,06000,08000,09000,10000,11000,12000,13000,15000,16000,17000,18000,19000,20000,21000,22000,23000,24000,25000,26000,27000,28000,29000,30000,31000,32000,33000,34000,35000,36000,37000,38000,39000,40000,41000,42000,44000,45000,46000,47000,48000,49000,50000,51000,53000,54000,55000,56000&7027=-1&7001=421&7028=53&7031=0&7040=-1&7083=levels&7029=23&7090=70")
# download PCI table and extract the data frame from the list
pci_raw <- url_pci %>%
html_nodes("table") %>%
.[2] %>%
html_table(fill = TRUE) %>%
.[[1]]
#####################
# download PCE data #
#####################
# url for PCE HTML table
url_pce <- read_html("http://www.bea.gov/iTable/iTableHtml.cfm?reqid=70&step=10&isuri=1&7003=2&7035=-1&7004=x&7005=1&7006=00000,01000,02000,04000,05000,06000,08000,09000,10000,11000,12000,13000,15000,16000,17000,18000,19000,20000,21000,22000,23000,24000,25000,26000,27000,28000,29000,30000,31000,32000,33000,34000,35000,36000,37000,38000,39000,40000,41000,42000,44000,45000,46000,47000,48000,49000,50000,51000,53000,54000,55000,56000&7036=-1&7001=62&7002=6&7090=70&7007=-1&7093=levels")
# download PCE table and extract the data frame from the list
pce_raw <- url_pce %>%
html_nodes("table") %>%
.[2] %>%
html_table(fill = TRUE) %>%
.[[1]]
# create tidy PCI data
pci_clean <- pci_raw %>%
apply(2, function(x) gsub("[[:punct:]]", "", x)) %>%
as_tibble(.) %>%
group_by(GeoFips, GeoName) %>%
mutate_each(funs(as.numeric)) %>%
ungroup() %>%
select(Fips = GeoFips, Location = GeoName, `1997`:`2014`) %>%
gather(Year, Income, -c(Fips, Location))
# create tidy PCE data
pce_clean <- pce_raw %>%
apply(2, function(x) gsub("[[:punct:]]", "", x)) %>%
as_tibble(.) %>%
group_by(Fips, Area) %>%
mutate_each(funs(as.numeric)) %>%
ungroup() %>%
rename(Location = Area) %>%
gather(Year, Expenditures, -c(Fips, Location))
# create tidy merged data frame
data_clean <- pci_clean %>%
left_join(pce_clean) %>%
mutate(Savings = Income - Expenditures,
Year = as.numeric(Year)) %>%
filter(Location != "United States" | Location != "District of Columbia") %>%
mutate(region = tolower(Location),
Savings_Rate = Savings / Income)
data_clean
pci_clean %>%
left_join(pce_clean) %>%
mutate(Savings = Income - Expenditures,
Year = as.numeric(Year)) %>%
filter(Location != "United States" | Location != "District of Columbia")
pci_clean %>%
left_join(pce_clean) %>%
mutate(Savings = Income - Expenditures,
Year = as.numeric(Year)) %>%
filter(Location != "United States", Location != "District of Columbia")
unique(data_clean$Location
unique(data_clean$Location)
unique(data_clean$Location)[37]
?selectInput
data_clean
?geom_text
library(ggplot2)
?geom_text
?scale_x_continuous
?select
library(dplyr)
?select
rsconnect::setAccountInfo(name='bradleyboehmke', token='EBBD731240E1874365B93786B08BF02F', secret='3vKiEUznbRdPwLRO0CEJyVtT0jAtAAl1+5MOw6k4')
library(rsconnect)
deployApp()
?deployApp
deployApp(account = "bradleyboehmke")
setAccountInfo(name='bradleyboehmke', token='EBBD731240E1874365B93786B08BF02F', secret='3vKiEUznbRdPwLRO0CEJyVtT0jAtAAl1+5MOw6k4')
library(shiny)
runApp
runApp()
rsconnect::deployApp()
rsconnect::deployApp()
?deployApp
deployApp()
deployApp(appName = "US Savings Rate App.Rmd")
Sys.setenv("ggmap_api" = "AIzaSyCNAFMCFVUk1t7E-hvV8H2PgF3uLSKgYuY")
ggmap_api
Sys.getenv("ggmap_api")
